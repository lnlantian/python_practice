10.在某个文件夹下查找含有指定字符串的文件
#!/bin/bash
for file in `ls $2`
do
f=`grep -l $1 $2$file`
echo $f
done
调用方法：./tst 000 bash＃在文件夹bash中查找含有“000”的文件。

11.添加一个新组为class1，然后添加属于这个组的30个用户，用户名的形式为stdxx，其中xx从01到30。
groupadd class1
for((i=0;i<=30;i++))
do
if [ $i -lt 10 ];then
no="0$i"
else
no="$i"
fi
echo "stu$no"
useradd -g class1 stu$no
passwd -d stu$no
chage -d 0 stu$no
done

12.实现自动删除50个账号的功能。账号名为stud1至stud50
#!/bin/bash
for((i=0;i<=50;i++))
do
userdel -r stu$i
done

13.设计一个Shell程序，在/userdata目录下建立50个目录，即user1～user50，并设置每个目录的权限，其中其他用户的权限为：读；文件所有者的权限为：读、写、执行；文件所有者所在组的权限为：读、执行。
#!/bin/bash
mkdir /userdata
cd /userdata
for((i=1;i<=50;i++))
do
mkdir user$i
chmod 754 user$i
done

14.一个文件内容全部是类似 
【202.205.151.21】--【23：59：22】-“HTTP GET”-“Mozila”
...
写一个SHELL命令找出最多的10个IP
awk -F "--" '{print $1}' shit | sort | uniq -c | sort -r | sed -n '1,10p'
个人cat $1 |cut -c2-15|sort|uniq

15./tmp路径下有800个文件
文件名的格式是:filename_YYYYMMDD_序列号(从001到999).dat, 例如:filename_20040108_089.dat。现在想把这些文件改名,新文件名的格式是:filename_TODAY(当前日期)_序列号(从500开始,到达999之后从001开始).dat,例如: 把filename_20040108_089.dat改为filename_20041222_589.dat,注意新文件名的序列号的顺序需要和原来的一致,即要做排序处理。 
#!/usr/bin/bash
DEST_FILE_PART2="_`date '+%Y%m%d'`_"
EXT_NAME=".dat"
SRC_FILE_LIST=`find /tmp -name "*_*_*$EXT_NAME" -print`
for each in $SRC_FILE_LIST; do
    DEST_FILE_PART1=`echo $each | awk -F"_" '{print $1}'`
    OLD_NUM=`echo $each | awk -F"_" '{print $3}' | awk -F"." '{print $1}'`
    DEST_FILE_PART3=`expr $OLD_NUM + 500`
    [ $DEST_FILE_PART3 -gt 999 ] && DEST_FILE_PART3=`expr $OLD_NUM - 499`
        && DEST_FILE_PART3=`printf %03d $DEST_FILE_PART3`
    DEST_FILE=$DEST_FILE_PART1$DEST_FILE_PART2$DEST_FILE_PART3$EXT_NAME
    echo "mv $each to $DEST_FILE"
    mv $each $DEST_FILE
done
我的解法：
#!/bin/bash
new_file=$(date +20%y%m%d);
for file in $(ls ~/bash)
do
    i=$(echo "$file" | sed 's/.*_[0-9]*_\([0-9]*\).dat/\1/')    #取出序列号
    i=$(echo $i | sed 's/^0*\([0-9]*\)/\1/')                #去掉序列号前面可能的 ‘0’，
    let "ii=i+500"
    if [ $ii -gt 999 ]
    then
        let "ii=ii-999"
    fi
    ii=`printf %03d $ii`                            #添上可能需要的‘0’
    update=$(echo "$file" | sed 's/\(.*\)_[0-9]*_[0-9]*.dat/\1_'$new_file'_'$ii'.dat/')
    mv ~/bash/$file ~/bash/$update
done

for file in `ls /tmp`
do
f1=$(date +20%y%m%d);
f2_1=cat $file|cut -f3 -d'_'|cut -f1 -d'.'
if [ f2_1 -lt 500 ];then
f2=`expr $f2_1 + 500`
else
f2=`expr $f2_1 - 499`
fi
new_filename="filename_$f1_$f2.dat"
mv $file $new_filename
done
个人解法
for file in `ls /tmp`
do
f1=$(date +20%y%m%d);
f2_1=`echo $file|cut -f3 -d'_'|cut -f1 -d'.'`
echo $f2_1
if [ $f2_1 -lt 500 ];then
f2=`expr $f2_1 + 500`
else
f2=`expr $f2_1 - 499`
fi
new_filename="filename_$f1_$f2.dat"
mv /tmp/$file /tmp/$new_filename
done
